// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: product_service/comment.proto

package grpc_product_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommentIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []int64                `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentIdRequest) Reset() {
	*x = CommentIdRequest{}
	mi := &file_product_service_comment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentIdRequest) ProtoMessage() {}

func (x *CommentIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_comment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentIdRequest.ProtoReflect.Descriptor instead.
func (*CommentIdRequest) Descriptor() ([]byte, []int) {
	return file_product_service_comment_proto_rawDescGZIP(), []int{0}
}

func (x *CommentIdRequest) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

type UserDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*UserData            `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserDataResponse) Reset() {
	*x = UserDataResponse{}
	mi := &file_product_service_comment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataResponse) ProtoMessage() {}

func (x *UserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_comment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataResponse.ProtoReflect.Descriptor instead.
func (*UserDataResponse) Descriptor() ([]byte, []int) {
	return file_product_service_comment_proto_rawDescGZIP(), []int{1}
}

func (x *UserDataResponse) GetData() []*UserData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FullName      string                 `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Image         string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserData) Reset() {
	*x = UserData{}
	mi := &file_product_service_comment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserData) ProtoMessage() {}

func (x *UserData) ProtoReflect() protoreflect.Message {
	mi := &file_product_service_comment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserData.ProtoReflect.Descriptor instead.
func (*UserData) Descriptor() ([]byte, []int) {
	return file_product_service_comment_proto_rawDescGZIP(), []int{2}
}

func (x *UserData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserData) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *UserData) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

var File_product_service_comment_proto protoreflect.FileDescriptor

const file_product_service_comment_proto_rawDesc = "" +
	"\n" +
	"\x1dproduct_service/comment.proto\x12\x0fproduct_service\"\"\n" +
	"\x10CommentIdRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x03(\x03R\x02id\"A\n" +
	"\x10UserDataResponse\x12-\n" +
	"\x04data\x18\x01 \x03(\v2\x19.product_service.UserDataR\x04data\"M\n" +
	"\bUserData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1b\n" +
	"\tfull_name\x18\x02 \x01(\tR\bfullName\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image2^\n" +
	"\aComment\x12S\n" +
	"\vGetUserData\x12!.product_service.CommentIdRequest\x1a!.product_service.UserDataResponseBgZehttps://github.com/alexkhub/OnlineStoreGo/blob/main/protos/proto/product_service;grpc_product_serviceb\x06proto3"

var (
	file_product_service_comment_proto_rawDescOnce sync.Once
	file_product_service_comment_proto_rawDescData []byte
)

func file_product_service_comment_proto_rawDescGZIP() []byte {
	file_product_service_comment_proto_rawDescOnce.Do(func() {
		file_product_service_comment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_product_service_comment_proto_rawDesc), len(file_product_service_comment_proto_rawDesc)))
	})
	return file_product_service_comment_proto_rawDescData
}

var file_product_service_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_product_service_comment_proto_goTypes = []any{
	(*CommentIdRequest)(nil), // 0: product_service.CommentIdRequest
	(*UserDataResponse)(nil), // 1: product_service.UserDataResponse
	(*UserData)(nil),         // 2: product_service.UserData
}
var file_product_service_comment_proto_depIdxs = []int32{
	2, // 0: product_service.UserDataResponse.data:type_name -> product_service.UserData
	0, // 1: product_service.Comment.GetUserData:input_type -> product_service.CommentIdRequest
	1, // 2: product_service.Comment.GetUserData:output_type -> product_service.UserDataResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_product_service_comment_proto_init() }
func file_product_service_comment_proto_init() {
	if File_product_service_comment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_product_service_comment_proto_rawDesc), len(file_product_service_comment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_product_service_comment_proto_goTypes,
		DependencyIndexes: file_product_service_comment_proto_depIdxs,
		MessageInfos:      file_product_service_comment_proto_msgTypes,
	}.Build()
	File_product_service_comment_proto = out.File
	file_product_service_comment_proto_goTypes = nil
	file_product_service_comment_proto_depIdxs = nil
}
